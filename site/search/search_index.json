{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Started","text":"<p>The deepset Cloud SDK is an open source software development kit that provides convenient access and integration with deepset Cloud, a powerful cloud offering for various natural language processing (NLP) tasks. This README provides an overview of the SDK and its features, and information on contributing to the project and exploring related resources.</p>"},{"location":"#supported-features","title":"Supported Features","text":"<p>The following examples demonstrate how to use the deepset Cloud SDK to interact with deepset Cloud using Python. You can use the deepset Cloud SDK in the command line as well. For more information, see the CLI documentation. - SDK Examples - Upload datasets - CLI Examples - Upload datasets</p>"},{"location":"#installation","title":"Installation","text":"<p>The deepset Cloud SDK is available on PyPI and you can install it using pip: <pre><code>pip install deepset-cloud-sdk\n</code></pre></p> <p>After installing the deepset Cloud SDK, you can use it to interact with deepset Cloud. It comes with a command line interface (CLI), that you can use by calling: <pre><code>deepset-cloud --help\n</code></pre></p> <p> </p>"},{"location":"#development-installation","title":"Development Installation","text":"<p>To install the deepset Cloud SDK for development, clone the repository and install the package in editable mode: <pre><code>pip install hatch==1.7.0\nhatch build\n</code></pre></p> <p>Instead of calling the cli from the build package, you can call it directly from the source code: <pre><code>python3 -m deepset_cloud_sdk.cli --help\n</code></pre></p>"},{"location":"#interested-in-deepset-cloud","title":"Interested in deepset Cloud?","text":"<p>If you are interested in exploring deepset Cloud, visit cloud.deepset.ai. deepset Cloud provides a range of NLP capabilities and services to help you build and deploy powerful natural language processing applications.</p>"},{"location":"#interested-in-haystack","title":"Interested in Haystack?","text":"<p>deepset Cloud is powered by Haystack, an open source framework for building end-to-end NLP pipelines.  - Project website  - GitHub repository</p>"},{"location":"examples/cli/","title":"deepset Cloud CLI","text":"<p>The deepset Cloud CLI is a command-line interface tool that you can use to interact with the deepset Cloud SDK and perform various operations, such as uploading files and folders to your deepset Cloud workspace.</p>"},{"location":"examples/cli/#installation","title":"Installation","text":"<p>To install the deepset Cloud CLI, use <code>pip</code>:</p> <pre><code>pip3 install deepset-cloud-sdk\n</code></pre>"},{"location":"examples/cli/#configuration","title":"Configuration","text":"<p>Before using the deepset Cloud CLI, log in and provide your credentials. You can do this by running the command:</p> <pre><code>deepset-cloud login\n</code></pre> <p>This command prompts you to enter your API key and default workspace name. Once you provide these details, the CLI stores your credentials in the <code>~/.deepset-cloud/.env</code> file. This file is used as the default configuration for subsequent CLI commands.</p> <p>Alternatively, to use a different environment file for your configuration, you can create an <code>.env</code> file in the local directory. Additionally, you have the flexibility to provide the credentials directly as command-line arguments or set them programmatically in your code.</p>"},{"location":"examples/cli/#usage","title":"Usage","text":"<p>You can use the deepset Cloud CLI by running the following command: <pre><code>deepset-cloud &lt;command&gt;\n</code></pre> Replace  with one of the supported commands. To list all available commands, run: <code>deepset-cloud --help</code>."},{"location":"examples/cli/#example-commands","title":"Example Commands","text":""},{"location":"examples/cli/#upload-files-and-folders","title":"Upload Files and Folders","text":"<p>This command uploads the file example.txt to your deepset Cloud workspace.</p> <p><pre><code>deepset-cloud upload ./examples/data/example.txt\n</code></pre> This command uploads the entire data folder, located in the examples directory, to your deepset Cloud workspace. Note that the paths provided in the above examples are relative to the current working directory. <pre><code>deepset-cloud upload ./examples/data\n</code></pre></p> <p>If you want to overwrite existing files in your project, you can use the <code>--write-mode</code> flag. For example: <pre><code>deepset-cloud upload ./examples/data --write-mode OVERWRITE\n</code></pre> This syncs your local files with the files in your deepset Cloud workspace without having to manually delete the files in your workspace.</p>"},{"location":"examples/cli/#list-files","title":"List files","text":"<p>You can run the <code>list-files</code> operation to search files in your deepset Cloud workspace. For example: <pre><code>deepset-cloud list-files\n</code></pre> with optional arguments: <pre><code>--name \"&lt;your-file-name&gt;\"  # search by file name\n--content \"content\" # search by file content\n--odata-filter \"key eq 'value'\" # search by odata filter\n</code></pre></p>"},{"location":"examples/cli/#documentation","title":"Documentation","text":"<p>For more information and detailed usage instructions, see the deepset Cloud SDK documentation.</p>"},{"location":"examples/cli/#support","title":"Support","text":"<p>If you encounter any issues or have any questions, feel free to reach out to our team on discord.</p> <p>We hope you find the deepset Cloud CLI useful in your projects. Happy coding!</p>"},{"location":"examples/sdk/","title":"Examples","text":""},{"location":"examples/sdk/#upload-files-to-deepset-cloud","title":"Upload files to deepset Cloud","text":"<p>You can upload files in three different ways: 1. Upload multiple files by providing explicit file paths. 2. Upload all files from a folder. 3. Upload raw text.</p> <p>For uploading files from your local machine to deepset Cloud, you can use <code>upload</code>.</p>"},{"location":"examples/sdk/#authentication","title":"Authentication","text":"<p>You will need to either explicitly pass an api_key to the <code>upload</code> function or set the environment variable <code>DEEPSET_CLOUD_API_KEY</code> to your api key. By running <code>deepset-cloud login</code> you can also store your api key globally on your machine. This will allow you to omit the api_key parameter in the following examples.</p>"},{"location":"examples/sdk/#example-1-upload-all-files-from-a-folder","title":"Example 1: Upload all files from a folder","text":"<p>Uploads all files from a folder to the default workspace.</p> <pre><code>upload(\n# workspace_name=\"my_workspace\",  # optional, by default the environment variable \"DEFAULT_WORKSPACE_NAME\" is used\npaths=[Path(\"./examples/data\")],\nblocking=True,  # optional, by default True\ntimeout_s=300,  # optional, by default 300\nshow_progress=True,  # optional, by default True\nrecursive=False,  # optional, by default False\n)\n</code></pre>"},{"location":"examples/sdk/#example-2-upload-raw-texts","title":"Example 2: Upload raw texts","text":"<p>Uploads a list of raw texts to the default workspace. This can be useful if you want to process your text first and later upload the content of the files.</p> <pre><code>upload_texts(\n# workspace_name=\"my_workspace\",  # optional, by default the environment variable \"DEFAULT_WORKSPACE_NAME\" is used\nfiles=[\nDeepsetCloudFile(\nname=\"example.txt\",\ntext=\"this is text\",\nmeta={\"key\": \"value\"},  # optional\n)\n],\nblocking=True,  # optional, by default True\ntimeout_s=300,  # optional, by default 300\n)\n</code></pre>"}]}